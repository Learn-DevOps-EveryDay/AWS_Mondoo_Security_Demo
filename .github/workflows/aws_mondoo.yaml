name: Terraform Infra Pipeline

permissions:
  contents: read
  checks: write
  issues: write # Keep this to satisfy the GITHUB_TOKEN requirements for other actions

on:
  workflow_dispatch:
    inputs:
      securityScan:
        description: "Select IaC Security Scanner"
        required: true
        default: "checkov"
        type: choice
        options: ["checkov", "mondoo", "none"]

      enableDestroy:
        description: "Enable destroy stage?"
        required: true
        default: "false"
        type: choice
        options: ["true", "false"]

jobs:
  # ====================================================================
  # STAGE 1: IaC Security Scan 
  # ====================================================================

  # Scans run only if NOT a destroy run (to avoid unnecessary compute)
  checkov:
    if: ${{ github.event.inputs.securityScan == 'checkov' && github.event.inputs.enableDestroy != 'true' }}
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install Checkov
        run: pip install checkov
      - name: Run Checkov on all modules
        run: checkov -d terraform-project/ || true

  mondoo_scan: 
    if: ${{ github.event.inputs.securityScan == 'mondoo' && github.event.inputs.enableDestroy != 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Scan Terraform with Mondoo
        uses: mondoohq/actions/terraform-hcl@main 
        with:
          service-account-credentials: ${{ secrets.MONDOO_SERVICE_ACCOUNT }}
          path: terraform-project
          output: full 

  # ====================================================================
  # STAGE 2: Terraform Plan & Apply (Approval Pop-up for Apply)
  # ====================================================================
  
  terraform:
    needs: [checkov, mondoo_scan]
    if: ${{ github.event.inputs.enableDestroy != 'true' && always() }} 
    runs-on: ubuntu-latest
    # ðŸ‘‡ Pop-up for Apply is enforced by the 'dev' environment protection
    environment: 
      name: dev
    
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.0
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Terraform Init
        run: terraform -chdir=terraform-project init -backend-config=backend.tfvars
      - name: Terraform Plan
        run: |
          terraform -chdir=terraform-project plan -out=tfplan
          terraform -chdir=terraform-project show -no-color tfplan > terraform-project/plan-summary.txt
      - name: Upload Terraform Plan Summary
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan-summary
          path: terraform-project/plan-summary.txt
      - name: Terraform Apply
        # Job pauses here until 'dev' environment is approved.
        run: terraform -chdir=terraform-project apply -auto-approve tfplan

  # ====================================================================
  # STAGE 3: Destroy (Approval Pop-up for Destroy)
  # ====================================================================
  
  destroy:
    if: ${{ github.event.inputs.enableDestroy == 'true' }}
    runs-on: ubuntu-latest
    # ðŸ‘‡ Pop-up for Destroy is enforced by the 'dev' environment protection
    environment: 
      name: dev
    
    steps:
      - uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.0
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Terraform Init
        run: terraform -chdir=terraform-project init -backend-config=backend.tfvars
        
      # The job will pause HERE, showing the approval pop-up due to the 'environment' block above.
      
      - name: Terraform Destroy
        run: terraform -chdir=terraform-project destroy -auto-approve