name: Terraform Infra Pipeline

permissions:
  contents: read
  checks: write

on:
  workflow_dispatch:
    inputs:
      securityScan:
        description: "Select IaC Security Scanner"
        required: true
        default: "checkov"
        type: choice
        options: ["checkov", "mondoo", "none"]

      enableDestroy:
        description: "Enable destroy stage?"
        required: true
        default: "false"
        type: choice
        options: ["true", "false"]

jobs:
  # ====================================================================
  # STAGE 1: IaC Security Scan (Checkov OR Mondoo)
  # ====================================================================

  # 1A: Checkov Scan
  checkov:
    if: ${{ github.event.inputs.securityScan == 'checkov' }}
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Checkov
        run: pip install checkov

      - name: Create Reports Directory
        run: mkdir -p reports

      - name: Run Checkov on all modules
        id: checkov_scan
        run: |
          checkov -d terraform-project/ \
            --output junitxml \
            --output-file reports/checkov-report.xml || true

          if [ ! -s reports/checkov-report.xml ]; then
            echo "<?xml version=\"1.0\" encoding=\"UTF-8\"?><testsuites></testsuites>" > reports/checkov-report.xml
          fi

      - name: Upload Checkov Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: checkov-report
          path: reports/checkov-report.xml

      - name: Publish Test Report
        if: always()
        # ðŸŽ¯ FIX: Re-enabled the report publisher
        uses: mikepenz/action-junit-report@v4
        with:
          report_paths: 'reports/checkov-report.xml'
          include_passed: true
          
  # 1B: Mondoo Scan
  # ðŸŽ¯ FIX: Corrected job structure by de-indenting the entire job
  mondoo_scan: 
    if: ${{ github.event.inputs.securityScan == 'mondoo' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Scan Terraform with Mondoo
        uses: mondoohq/actions/terraform-hcl@v1 
        with:
          service-account-credentials: ${{ secrets.MONDOO_SERVICE_ACCOUNT }}
          path: terraform-project # Using terraform-project for consistency
          report-junit: mondoo-report.xml
          
      - name: Publish Test Report
        if: always()
        uses: mikepenz/action-junit-report@v4
        with:
          report_paths: 'mondoo-report.xml'

      - name: Upload Scan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: mondoo-report
          path: mondoo-report.xml

  # ====================================================================
  # STAGE 2: Terraform Plan & Apply 
  # ====================================================================
  
  terraform:
    needs: [checkov, mondoo_scan]
    if: always() 
    runs-on: ubuntu-latest
    environment: 
      name: dev
      url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
    
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.0
          
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Terraform Init
        run: terraform -chdir=terraform-project init -backend-config=backend.tfvars
        
      - name: Terraform Plan
        run: |
          terraform -chdir=terraform-project plan -out=tfplan
          terraform -chdir=terraform-project show -no-color tfplan > terraform-project/plan-summary.txt
          
      - name: Upload Terraform Plan Summary
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan-summary
          path: terraform-project/plan-summary.txt
      
      - name: Terraform Apply
        run: terraform -chdir=terraform-project apply -auto-approve tfplan

  # ====================================================================
  # STAGE 3: Destroy
  # ====================================================================
  
  destroy:
    if: ${{ github.event.inputs.enableDestroy == 'true' }}
    runs-on: ubuntu-latest
    needs: [terraform]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.0
          
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Terraform Init
        run: terraform -chdir=terraform-project init -backend-config=backend.tfvars

      - name: Manual Approval before Destroy
        uses: trstringer/manual-approval@v1
        with:
          approvers: santuCG
          minimum-approvals: 1
          issue-title: "ðŸš¨ Approve Terraform Destroy"
          issue-body: "Approve to proceed with **DESTROYING** all resources in the **dev** environment."
          secret: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Terraform Destroy
        run: terraform -chdir=terraform-project destroy -auto-approve