name: Terraform Infra Pipeline

permissions:
  contents: read
  checks: write
  issues: write

on:
  workflow_dispatch:
    inputs:
      securityScan:
        description: "Select IaC Security Scanner"
        required: true
        default: "checkov"
        type: choice
        options: ["checkov", "mondoo", "none"]

      enableDestroy:
        description: "Enable destroy stage?"
        required: true
        default: "false"
        type: choice
        options: ["true", "false"]

jobs:
  # ====================================================================
  # STAGE 1: IaC Security Scan (Only runs if NOT a destroy run)
  # ====================================================================

  # This job will be skipped if destroy is enabled, preventing the Terraform
  # Apply job from running unnecessarily.

  # 1A: Checkov Scan
  checkov:
    # ðŸŽ¯ FIX: Add check to skip if destroy is enabled
    if: ${{ github.event.inputs.securityScan == 'checkov' && github.event.inputs.enableDestroy != 'true' }}
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install Checkov
        run: pip install checkov
      - name: Run Checkov on all modules
        id: checkov_scan
        run: checkov -d terraform-project/ || true

  # 1B: Mondoo Scan
  mondoo_scan: 
    # ðŸŽ¯ FIX: Add check to skip if destroy is enabled
    if: ${{ github.event.inputs.securityScan == 'mondoo' && github.event.inputs.enableDestroy != 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Scan Terraform with Mondoo
        uses: mondoohq/actions/terraform-hcl@main 
        with:
          service-account-credentials: ${{ secrets.MONDOO_SERVICE_ACCOUNT }}
          path: terraform-project

  # ====================================================================
  # STAGE 2: Terraform Plan & Apply (Only runs if NOT a destroy run)
  # ====================================================================
  
  terraform:
    # ðŸŽ¯ FIX: Requires scans only if they were run, and only runs if NOT a destroy operation.
    needs: [checkov, mondoo_scan]
    if: ${{ github.event.inputs.enableDestroy != 'true' && always() }} 
    runs-on: ubuntu-latest
    environment: 
      name: dev # Environment protection gates the APPLY step
      url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
    
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.0
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Terraform Init
        run: terraform -chdir=terraform-project init -backend-config=backend.tfvars
      - name: Terraform Plan
        run: |
          terraform -chdir=terraform-project plan -out=tfplan
          terraform -chdir=terraform-project show -no-color tfplan > terraform-project/plan-summary.txt
      - name: Upload Terraform Plan Summary
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan-summary
          path: terraform-project/plan-summary.txt
      - name: Terraform Apply
        run: terraform -chdir=terraform-project apply -auto-approve tfplan

  # ====================================================================
  # STAGE 3: Destroy (Runs independently when flag is set)
  # ====================================================================
  
  destroy:
    # ðŸŽ¯ FIX: Removed 'needs: [terraform]' so it can run directly.
    if: ${{ github.event.inputs.enableDestroy == 'true' }}
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.0
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Terraform Init
        run: terraform -chdir=terraform-project init -backend-config=backend.tfvars

      # This manual approval gate controls the destroy operation explicitly.
      - name: Manual Approval before Destroy
        uses: trstringer/manual-approval@v1
        with:
          approvers: santuCG 
          minimum-approvals: 1
          issue-title: "ðŸš¨ Approve Terraform Destroy"
          issue-body: "Approve to proceed with **DESTROYING** all resources in the **dev** environment."
          secret: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Terraform Destroy
        run: terraform -chdir=terraform-project destroy -auto-approve